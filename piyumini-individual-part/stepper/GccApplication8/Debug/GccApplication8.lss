
GccApplication8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003be  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000412  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000412  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000444  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000480  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000982  00000000  00000000  000004c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000064f  00000000  00000000  00000e4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003d2  00000000  00000000  00001499  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000008c  00000000  00000000  0000186c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003a8  00000000  00000000  000018f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000042f  00000000  00000000  00001ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  000020cf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define F_CPU 16000000UL
#include "stepper.h"

int main(void)
{
	initSteppers();
  6c:	0e 94 43 00 	call	0x86	; 0x86 <initSteppers>
	rotateStepper_1(1,4);
  70:	40 e0       	ldi	r20, 0x00	; 0
  72:	50 e0       	ldi	r21, 0x00	; 0
  74:	60 e8       	ldi	r22, 0x80	; 128
  76:	70 e4       	ldi	r23, 0x40	; 64
  78:	81 e0       	ldi	r24, 0x01	; 1
  7a:	90 e0       	ldi	r25, 0x00	; 0
  7c:	0e 94 47 00 	call	0x8e	; 0x8e <rotateStepper_1>
}
  80:	80 e0       	ldi	r24, 0x00	; 0
  82:	90 e0       	ldi	r25, 0x00	; 0
  84:	08 95       	ret

00000086 <initSteppers>:
 *  Author: Dasith
 */ 
#include "stepper.h"

void initSteppers(){
	DDRA = 0xFF;
  86:	8f ef       	ldi	r24, 0xFF	; 255
  88:	8a bb       	out	0x1a, r24	; 26
	DDRC = 0xFF;
  8a:	84 bb       	out	0x14, r24	; 20
  8c:	08 95       	ret

0000008e <rotateStepper_1>:
}

void rotateStepper_1(int direction, float distance)
{
  8e:	8f 92       	push	r8
  90:	9f 92       	push	r9
  92:	af 92       	push	r10
  94:	bf 92       	push	r11
  96:	cf 92       	push	r12
  98:	df 92       	push	r13
  9a:	ef 92       	push	r14
  9c:	ff 92       	push	r15
  9e:	cf 93       	push	r28
  a0:	df 93       	push	r29
  a2:	4a 01       	movw	r8, r20
  a4:	5b 01       	movw	r10, r22
	// Counterclockwise-0
	// 1 distance unit = 1 rotating

	int period;
	period = 100;
	if (direction == 1)
  a6:	01 97       	sbiw	r24, 0x01	; 1
  a8:	d9 f1       	breq	.+118    	; 0x120 <rotateStepper_1+0x92>
  aa:	c0 e0       	ldi	r28, 0x00	; 0
  ac:	d0 e0       	ldi	r29, 0x00	; 0
  ae:	88 c0       	rjmp	.+272    	; 0x1c0 <rotateStepper_1+0x132>
	{
		for (int i = 0; i < round(distance); i++)
		{
			PORTA = 0x03;
  b0:	83 e0       	ldi	r24, 0x03	; 3
  b2:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b4:	2f ef       	ldi	r18, 0xFF	; 255
  b6:	31 ee       	ldi	r19, 0xE1	; 225
  b8:	94 e0       	ldi	r25, 0x04	; 4
  ba:	21 50       	subi	r18, 0x01	; 1
  bc:	30 40       	sbci	r19, 0x00	; 0
  be:	90 40       	sbci	r25, 0x00	; 0
  c0:	e1 f7       	brne	.-8      	; 0xba <rotateStepper_1+0x2c>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <rotateStepper_1+0x36>
  c4:	00 00       	nop
			_delay_ms(period);
			PORTA = 0x06;
  c6:	96 e0       	ldi	r25, 0x06	; 6
  c8:	9b bb       	out	0x1b, r25	; 27
  ca:	2f ef       	ldi	r18, 0xFF	; 255
  cc:	31 ee       	ldi	r19, 0xE1	; 225
  ce:	94 e0       	ldi	r25, 0x04	; 4
  d0:	21 50       	subi	r18, 0x01	; 1
  d2:	30 40       	sbci	r19, 0x00	; 0
  d4:	90 40       	sbci	r25, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <rotateStepper_1+0x42>
  d8:	00 c0       	rjmp	.+0      	; 0xda <rotateStepper_1+0x4c>
  da:	00 00       	nop
			_delay_ms(period);
			PORTA = 0x0c;
  dc:	9c e0       	ldi	r25, 0x0C	; 12
  de:	9b bb       	out	0x1b, r25	; 27
  e0:	2f ef       	ldi	r18, 0xFF	; 255
  e2:	31 ee       	ldi	r19, 0xE1	; 225
  e4:	94 e0       	ldi	r25, 0x04	; 4
  e6:	21 50       	subi	r18, 0x01	; 1
  e8:	30 40       	sbci	r19, 0x00	; 0
  ea:	90 40       	sbci	r25, 0x00	; 0
  ec:	e1 f7       	brne	.-8      	; 0xe6 <rotateStepper_1+0x58>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <rotateStepper_1+0x62>
  f0:	00 00       	nop
			_delay_ms(period);
			PORTA = 0x09;
  f2:	99 e0       	ldi	r25, 0x09	; 9
  f4:	9b bb       	out	0x1b, r25	; 27
  f6:	2f ef       	ldi	r18, 0xFF	; 255
  f8:	31 ee       	ldi	r19, 0xE1	; 225
  fa:	94 e0       	ldi	r25, 0x04	; 4
  fc:	21 50       	subi	r18, 0x01	; 1
  fe:	30 40       	sbci	r19, 0x00	; 0
 100:	90 40       	sbci	r25, 0x00	; 0
 102:	e1 f7       	brne	.-8      	; 0xfc <rotateStepper_1+0x6e>
 104:	00 c0       	rjmp	.+0      	; 0x106 <rotateStepper_1+0x78>
 106:	00 00       	nop
			_delay_ms(period);
			PORTA = 0x03;
 108:	8b bb       	out	0x1b, r24	; 27
 10a:	2f ef       	ldi	r18, 0xFF	; 255
 10c:	31 ee       	ldi	r19, 0xE1	; 225
 10e:	84 e0       	ldi	r24, 0x04	; 4
 110:	21 50       	subi	r18, 0x01	; 1
 112:	30 40       	sbci	r19, 0x00	; 0
 114:	80 40       	sbci	r24, 0x00	; 0
 116:	e1 f7       	brne	.-8      	; 0x110 <rotateStepper_1+0x82>
 118:	00 c0       	rjmp	.+0      	; 0x11a <rotateStepper_1+0x8c>
 11a:	00 00       	nop

	int period;
	period = 100;
	if (direction == 1)
	{
		for (int i = 0; i < round(distance); i++)
 11c:	21 96       	adiw	r28, 0x01	; 1
 11e:	02 c0       	rjmp	.+4      	; 0x124 <rotateStepper_1+0x96>
 120:	c0 e0       	ldi	r28, 0x00	; 0
 122:	d0 e0       	ldi	r29, 0x00	; 0
 124:	be 01       	movw	r22, r28
 126:	0d 2e       	mov	r0, r29
 128:	00 0c       	add	r0, r0
 12a:	88 0b       	sbc	r24, r24
 12c:	99 0b       	sbc	r25, r25
 12e:	0e 94 08 01 	call	0x210	; 0x210 <__floatsisf>
 132:	6b 01       	movw	r12, r22
 134:	7c 01       	movw	r14, r24
 136:	c5 01       	movw	r24, r10
 138:	b4 01       	movw	r22, r8
 13a:	0e 94 67 01 	call	0x2ce	; 0x2ce <round>
 13e:	9b 01       	movw	r18, r22
 140:	ac 01       	movw	r20, r24
 142:	c7 01       	movw	r24, r14
 144:	b6 01       	movw	r22, r12
 146:	0e 94 01 01 	call	0x202	; 0x202 <__cmpsf2>
 14a:	88 23       	and	r24, r24
 14c:	0c f4       	brge	.+2      	; 0x150 <rotateStepper_1+0xc2>
 14e:	b0 cf       	rjmp	.-160    	; 0xb0 <rotateStepper_1+0x22>
 150:	4d c0       	rjmp	.+154    	; 0x1ec <rotateStepper_1+0x15e>
	}
	else
	{
		for (int i = 0; i < round(distance); i++)
		{
			PORTA = 0x03;
 152:	83 e0       	ldi	r24, 0x03	; 3
 154:	8b bb       	out	0x1b, r24	; 27
 156:	9f ef       	ldi	r25, 0xFF	; 255
 158:	21 ee       	ldi	r18, 0xE1	; 225
 15a:	34 e0       	ldi	r19, 0x04	; 4
 15c:	91 50       	subi	r25, 0x01	; 1
 15e:	20 40       	sbci	r18, 0x00	; 0
 160:	30 40       	sbci	r19, 0x00	; 0
 162:	e1 f7       	brne	.-8      	; 0x15c <rotateStepper_1+0xce>
 164:	00 c0       	rjmp	.+0      	; 0x166 <rotateStepper_1+0xd8>
 166:	00 00       	nop
			_delay_ms(period);
			PORTA = 0x09;
 168:	99 e0       	ldi	r25, 0x09	; 9
 16a:	9b bb       	out	0x1b, r25	; 27
 16c:	9f ef       	ldi	r25, 0xFF	; 255
 16e:	21 ee       	ldi	r18, 0xE1	; 225
 170:	34 e0       	ldi	r19, 0x04	; 4
 172:	91 50       	subi	r25, 0x01	; 1
 174:	20 40       	sbci	r18, 0x00	; 0
 176:	30 40       	sbci	r19, 0x00	; 0
 178:	e1 f7       	brne	.-8      	; 0x172 <rotateStepper_1+0xe4>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <rotateStepper_1+0xee>
 17c:	00 00       	nop
			_delay_ms(period);
			PORTA = 0x0c;
 17e:	9c e0       	ldi	r25, 0x0C	; 12
 180:	9b bb       	out	0x1b, r25	; 27
 182:	9f ef       	ldi	r25, 0xFF	; 255
 184:	21 ee       	ldi	r18, 0xE1	; 225
 186:	34 e0       	ldi	r19, 0x04	; 4
 188:	91 50       	subi	r25, 0x01	; 1
 18a:	20 40       	sbci	r18, 0x00	; 0
 18c:	30 40       	sbci	r19, 0x00	; 0
 18e:	e1 f7       	brne	.-8      	; 0x188 <rotateStepper_1+0xfa>
 190:	00 c0       	rjmp	.+0      	; 0x192 <rotateStepper_1+0x104>
 192:	00 00       	nop
			_delay_ms(period);
			PORTA = 0x06;
 194:	96 e0       	ldi	r25, 0x06	; 6
 196:	9b bb       	out	0x1b, r25	; 27
 198:	9f ef       	ldi	r25, 0xFF	; 255
 19a:	21 ee       	ldi	r18, 0xE1	; 225
 19c:	34 e0       	ldi	r19, 0x04	; 4
 19e:	91 50       	subi	r25, 0x01	; 1
 1a0:	20 40       	sbci	r18, 0x00	; 0
 1a2:	30 40       	sbci	r19, 0x00	; 0
 1a4:	e1 f7       	brne	.-8      	; 0x19e <rotateStepper_1+0x110>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <rotateStepper_1+0x11a>
 1a8:	00 00       	nop
			_delay_ms(period);
			PORTA = 0x03;
 1aa:	8b bb       	out	0x1b, r24	; 27
 1ac:	8f ef       	ldi	r24, 0xFF	; 255
 1ae:	91 ee       	ldi	r25, 0xE1	; 225
 1b0:	24 e0       	ldi	r18, 0x04	; 4
 1b2:	81 50       	subi	r24, 0x01	; 1
 1b4:	90 40       	sbci	r25, 0x00	; 0
 1b6:	20 40       	sbci	r18, 0x00	; 0
 1b8:	e1 f7       	brne	.-8      	; 0x1b2 <rotateStepper_1+0x124>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <rotateStepper_1+0x12e>
 1bc:	00 00       	nop
			_delay_ms(period);
		}
	}
	else
	{
		for (int i = 0; i < round(distance); i++)
 1be:	21 96       	adiw	r28, 0x01	; 1
 1c0:	be 01       	movw	r22, r28
 1c2:	0d 2e       	mov	r0, r29
 1c4:	00 0c       	add	r0, r0
 1c6:	88 0b       	sbc	r24, r24
 1c8:	99 0b       	sbc	r25, r25
 1ca:	0e 94 08 01 	call	0x210	; 0x210 <__floatsisf>
 1ce:	6b 01       	movw	r12, r22
 1d0:	7c 01       	movw	r14, r24
 1d2:	c5 01       	movw	r24, r10
 1d4:	b4 01       	movw	r22, r8
 1d6:	0e 94 67 01 	call	0x2ce	; 0x2ce <round>
 1da:	9b 01       	movw	r18, r22
 1dc:	ac 01       	movw	r20, r24
 1de:	c7 01       	movw	r24, r14
 1e0:	b6 01       	movw	r22, r12
 1e2:	0e 94 01 01 	call	0x202	; 0x202 <__cmpsf2>
 1e6:	88 23       	and	r24, r24
 1e8:	0c f4       	brge	.+2      	; 0x1ec <rotateStepper_1+0x15e>
 1ea:	b3 cf       	rjmp	.-154    	; 0x152 <rotateStepper_1+0xc4>
			_delay_ms(period);
			PORTA = 0x03;
			_delay_ms(period);
		}
	}
}
 1ec:	df 91       	pop	r29
 1ee:	cf 91       	pop	r28
 1f0:	ff 90       	pop	r15
 1f2:	ef 90       	pop	r14
 1f4:	df 90       	pop	r13
 1f6:	cf 90       	pop	r12
 1f8:	bf 90       	pop	r11
 1fa:	af 90       	pop	r10
 1fc:	9f 90       	pop	r9
 1fe:	8f 90       	pop	r8
 200:	08 95       	ret

00000202 <__cmpsf2>:
 202:	0e 94 43 01 	call	0x286	; 0x286 <__fp_cmp>
 206:	08 f4       	brcc	.+2      	; 0x20a <__cmpsf2+0x8>
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	08 95       	ret

0000020c <__floatunsisf>:
 20c:	e8 94       	clt
 20e:	09 c0       	rjmp	.+18     	; 0x222 <__floatsisf+0x12>

00000210 <__floatsisf>:
 210:	97 fb       	bst	r25, 7
 212:	3e f4       	brtc	.+14     	; 0x222 <__floatsisf+0x12>
 214:	90 95       	com	r25
 216:	80 95       	com	r24
 218:	70 95       	com	r23
 21a:	61 95       	neg	r22
 21c:	7f 4f       	sbci	r23, 0xFF	; 255
 21e:	8f 4f       	sbci	r24, 0xFF	; 255
 220:	9f 4f       	sbci	r25, 0xFF	; 255
 222:	99 23       	and	r25, r25
 224:	a9 f0       	breq	.+42     	; 0x250 <__floatsisf+0x40>
 226:	f9 2f       	mov	r31, r25
 228:	96 e9       	ldi	r25, 0x96	; 150
 22a:	bb 27       	eor	r27, r27
 22c:	93 95       	inc	r25
 22e:	f6 95       	lsr	r31
 230:	87 95       	ror	r24
 232:	77 95       	ror	r23
 234:	67 95       	ror	r22
 236:	b7 95       	ror	r27
 238:	f1 11       	cpse	r31, r1
 23a:	f8 cf       	rjmp	.-16     	; 0x22c <__floatsisf+0x1c>
 23c:	fa f4       	brpl	.+62     	; 0x27c <__floatsisf+0x6c>
 23e:	bb 0f       	add	r27, r27
 240:	11 f4       	brne	.+4      	; 0x246 <__floatsisf+0x36>
 242:	60 ff       	sbrs	r22, 0
 244:	1b c0       	rjmp	.+54     	; 0x27c <__floatsisf+0x6c>
 246:	6f 5f       	subi	r22, 0xFF	; 255
 248:	7f 4f       	sbci	r23, 0xFF	; 255
 24a:	8f 4f       	sbci	r24, 0xFF	; 255
 24c:	9f 4f       	sbci	r25, 0xFF	; 255
 24e:	16 c0       	rjmp	.+44     	; 0x27c <__floatsisf+0x6c>
 250:	88 23       	and	r24, r24
 252:	11 f0       	breq	.+4      	; 0x258 <__floatsisf+0x48>
 254:	96 e9       	ldi	r25, 0x96	; 150
 256:	11 c0       	rjmp	.+34     	; 0x27a <__floatsisf+0x6a>
 258:	77 23       	and	r23, r23
 25a:	21 f0       	breq	.+8      	; 0x264 <__floatsisf+0x54>
 25c:	9e e8       	ldi	r25, 0x8E	; 142
 25e:	87 2f       	mov	r24, r23
 260:	76 2f       	mov	r23, r22
 262:	05 c0       	rjmp	.+10     	; 0x26e <__floatsisf+0x5e>
 264:	66 23       	and	r22, r22
 266:	71 f0       	breq	.+28     	; 0x284 <__floatsisf+0x74>
 268:	96 e8       	ldi	r25, 0x86	; 134
 26a:	86 2f       	mov	r24, r22
 26c:	70 e0       	ldi	r23, 0x00	; 0
 26e:	60 e0       	ldi	r22, 0x00	; 0
 270:	2a f0       	brmi	.+10     	; 0x27c <__floatsisf+0x6c>
 272:	9a 95       	dec	r25
 274:	66 0f       	add	r22, r22
 276:	77 1f       	adc	r23, r23
 278:	88 1f       	adc	r24, r24
 27a:	da f7       	brpl	.-10     	; 0x272 <__floatsisf+0x62>
 27c:	88 0f       	add	r24, r24
 27e:	96 95       	lsr	r25
 280:	87 95       	ror	r24
 282:	97 f9       	bld	r25, 7
 284:	08 95       	ret

00000286 <__fp_cmp>:
 286:	99 0f       	add	r25, r25
 288:	00 08       	sbc	r0, r0
 28a:	55 0f       	add	r21, r21
 28c:	aa 0b       	sbc	r26, r26
 28e:	e0 e8       	ldi	r30, 0x80	; 128
 290:	fe ef       	ldi	r31, 0xFE	; 254
 292:	16 16       	cp	r1, r22
 294:	17 06       	cpc	r1, r23
 296:	e8 07       	cpc	r30, r24
 298:	f9 07       	cpc	r31, r25
 29a:	c0 f0       	brcs	.+48     	; 0x2cc <__fp_cmp+0x46>
 29c:	12 16       	cp	r1, r18
 29e:	13 06       	cpc	r1, r19
 2a0:	e4 07       	cpc	r30, r20
 2a2:	f5 07       	cpc	r31, r21
 2a4:	98 f0       	brcs	.+38     	; 0x2cc <__fp_cmp+0x46>
 2a6:	62 1b       	sub	r22, r18
 2a8:	73 0b       	sbc	r23, r19
 2aa:	84 0b       	sbc	r24, r20
 2ac:	95 0b       	sbc	r25, r21
 2ae:	39 f4       	brne	.+14     	; 0x2be <__fp_cmp+0x38>
 2b0:	0a 26       	eor	r0, r26
 2b2:	61 f0       	breq	.+24     	; 0x2cc <__fp_cmp+0x46>
 2b4:	23 2b       	or	r18, r19
 2b6:	24 2b       	or	r18, r20
 2b8:	25 2b       	or	r18, r21
 2ba:	21 f4       	brne	.+8      	; 0x2c4 <__fp_cmp+0x3e>
 2bc:	08 95       	ret
 2be:	0a 26       	eor	r0, r26
 2c0:	09 f4       	brne	.+2      	; 0x2c4 <__fp_cmp+0x3e>
 2c2:	a1 40       	sbci	r26, 0x01	; 1
 2c4:	a6 95       	lsr	r26
 2c6:	8f ef       	ldi	r24, 0xFF	; 255
 2c8:	81 1d       	adc	r24, r1
 2ca:	81 1d       	adc	r24, r1
 2cc:	08 95       	ret

000002ce <round>:
 2ce:	0e 94 bc 01 	call	0x378	; 0x378 <__fp_splitA>
 2d2:	e8 f0       	brcs	.+58     	; 0x30e <round+0x40>
 2d4:	9e 37       	cpi	r25, 0x7E	; 126
 2d6:	e8 f0       	brcs	.+58     	; 0x312 <round+0x44>
 2d8:	96 39       	cpi	r25, 0x96	; 150
 2da:	b8 f4       	brcc	.+46     	; 0x30a <round+0x3c>
 2dc:	9e 38       	cpi	r25, 0x8E	; 142
 2de:	48 f4       	brcc	.+18     	; 0x2f2 <round+0x24>
 2e0:	67 2f       	mov	r22, r23
 2e2:	78 2f       	mov	r23, r24
 2e4:	88 27       	eor	r24, r24
 2e6:	98 5f       	subi	r25, 0xF8	; 248
 2e8:	f9 cf       	rjmp	.-14     	; 0x2dc <round+0xe>
 2ea:	86 95       	lsr	r24
 2ec:	77 95       	ror	r23
 2ee:	67 95       	ror	r22
 2f0:	93 95       	inc	r25
 2f2:	95 39       	cpi	r25, 0x95	; 149
 2f4:	d0 f3       	brcs	.-12     	; 0x2ea <round+0x1c>
 2f6:	b6 2f       	mov	r27, r22
 2f8:	b1 70       	andi	r27, 0x01	; 1
 2fa:	6b 0f       	add	r22, r27
 2fc:	71 1d       	adc	r23, r1
 2fe:	81 1d       	adc	r24, r1
 300:	20 f4       	brcc	.+8      	; 0x30a <round+0x3c>
 302:	87 95       	ror	r24
 304:	77 95       	ror	r23
 306:	67 95       	ror	r22
 308:	93 95       	inc	r25
 30a:	0c 94 8b 01 	jmp	0x316	; 0x316 <__fp_mintl>
 30e:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__fp_mpack>
 312:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__fp_szero>

00000316 <__fp_mintl>:
 316:	88 23       	and	r24, r24
 318:	71 f4       	brne	.+28     	; 0x336 <__fp_mintl+0x20>
 31a:	77 23       	and	r23, r23
 31c:	21 f0       	breq	.+8      	; 0x326 <__fp_mintl+0x10>
 31e:	98 50       	subi	r25, 0x08	; 8
 320:	87 2b       	or	r24, r23
 322:	76 2f       	mov	r23, r22
 324:	07 c0       	rjmp	.+14     	; 0x334 <__fp_mintl+0x1e>
 326:	66 23       	and	r22, r22
 328:	11 f4       	brne	.+4      	; 0x32e <__fp_mintl+0x18>
 32a:	99 27       	eor	r25, r25
 32c:	0d c0       	rjmp	.+26     	; 0x348 <__fp_mintl+0x32>
 32e:	90 51       	subi	r25, 0x10	; 16
 330:	86 2b       	or	r24, r22
 332:	70 e0       	ldi	r23, 0x00	; 0
 334:	60 e0       	ldi	r22, 0x00	; 0
 336:	2a f0       	brmi	.+10     	; 0x342 <__fp_mintl+0x2c>
 338:	9a 95       	dec	r25
 33a:	66 0f       	add	r22, r22
 33c:	77 1f       	adc	r23, r23
 33e:	88 1f       	adc	r24, r24
 340:	da f7       	brpl	.-10     	; 0x338 <__fp_mintl+0x22>
 342:	88 0f       	add	r24, r24
 344:	96 95       	lsr	r25
 346:	87 95       	ror	r24
 348:	97 f9       	bld	r25, 7
 34a:	08 95       	ret

0000034c <__fp_mpack>:
 34c:	9f 3f       	cpi	r25, 0xFF	; 255
 34e:	31 f0       	breq	.+12     	; 0x35c <__fp_mpack_finite+0xc>

00000350 <__fp_mpack_finite>:
 350:	91 50       	subi	r25, 0x01	; 1
 352:	20 f4       	brcc	.+8      	; 0x35c <__fp_mpack_finite+0xc>
 354:	87 95       	ror	r24
 356:	77 95       	ror	r23
 358:	67 95       	ror	r22
 35a:	b7 95       	ror	r27
 35c:	88 0f       	add	r24, r24
 35e:	91 1d       	adc	r25, r1
 360:	96 95       	lsr	r25
 362:	87 95       	ror	r24
 364:	97 f9       	bld	r25, 7
 366:	08 95       	ret

00000368 <__fp_split3>:
 368:	57 fd       	sbrc	r21, 7
 36a:	90 58       	subi	r25, 0x80	; 128
 36c:	44 0f       	add	r20, r20
 36e:	55 1f       	adc	r21, r21
 370:	59 f0       	breq	.+22     	; 0x388 <__fp_splitA+0x10>
 372:	5f 3f       	cpi	r21, 0xFF	; 255
 374:	71 f0       	breq	.+28     	; 0x392 <__fp_splitA+0x1a>
 376:	47 95       	ror	r20

00000378 <__fp_splitA>:
 378:	88 0f       	add	r24, r24
 37a:	97 fb       	bst	r25, 7
 37c:	99 1f       	adc	r25, r25
 37e:	61 f0       	breq	.+24     	; 0x398 <__fp_splitA+0x20>
 380:	9f 3f       	cpi	r25, 0xFF	; 255
 382:	79 f0       	breq	.+30     	; 0x3a2 <__fp_splitA+0x2a>
 384:	87 95       	ror	r24
 386:	08 95       	ret
 388:	12 16       	cp	r1, r18
 38a:	13 06       	cpc	r1, r19
 38c:	14 06       	cpc	r1, r20
 38e:	55 1f       	adc	r21, r21
 390:	f2 cf       	rjmp	.-28     	; 0x376 <__fp_split3+0xe>
 392:	46 95       	lsr	r20
 394:	f1 df       	rcall	.-30     	; 0x378 <__fp_splitA>
 396:	08 c0       	rjmp	.+16     	; 0x3a8 <__fp_splitA+0x30>
 398:	16 16       	cp	r1, r22
 39a:	17 06       	cpc	r1, r23
 39c:	18 06       	cpc	r1, r24
 39e:	99 1f       	adc	r25, r25
 3a0:	f1 cf       	rjmp	.-30     	; 0x384 <__fp_splitA+0xc>
 3a2:	86 95       	lsr	r24
 3a4:	71 05       	cpc	r23, r1
 3a6:	61 05       	cpc	r22, r1
 3a8:	08 94       	sec
 3aa:	08 95       	ret

000003ac <__fp_zero>:
 3ac:	e8 94       	clt

000003ae <__fp_szero>:
 3ae:	bb 27       	eor	r27, r27
 3b0:	66 27       	eor	r22, r22
 3b2:	77 27       	eor	r23, r23
 3b4:	cb 01       	movw	r24, r22
 3b6:	97 f9       	bld	r25, 7
 3b8:	08 95       	ret

000003ba <_exit>:
 3ba:	f8 94       	cli

000003bc <__stop_program>:
 3bc:	ff cf       	rjmp	.-2      	; 0x3bc <__stop_program>
